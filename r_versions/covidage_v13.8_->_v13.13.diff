--- /home/bogao/Projects/como/comoOdeCpp/r_versions/covidage_v13.8_original.R	Mon Jun  8 19:51:36 2020
+++ /home/bogao/Projects/como/comoOdeCpp/r_versions/covidage_v13.13_original.R	Mon Jun  8 19:34:10 2020
@@ -21,6 +21,7 @@
 library(shinyWidgets)
 library(tidyverse)
 library(XLConnect)
+# library("comoOdeCpp")
 
 #read data from excel file
 setwd("C:/covid19/covid_age")
@@ -328,6 +329,9 @@
 
 inp <- read_excel(file_path, sheet = "Interventions")
 inputs<-function(inp, run){
+  # cap intervention end dates with simulation end date
+  inp$`Date End` = pmin(stopdate, inp$`Date End`)
+  
   tb<-which(inp$`Apply to`==run)
   
   si<-intersect(which(inp$Intervention=="Self-isolation if Symptomatic"),tb)
@@ -347,12 +351,7 @@
   
   v<-(format(as.POSIXct(inp$`Date End`,format='%Y/%m/%d %H:%M:%S'),format="%d/%m/%y"))
   v2<-as.Date(v,format="%d/%m/%y")
-  ll<-length(v[!is.na(v)])
-  for (gg in 1:ll) {
-    v2[gg]<-min(v2[gg],stopdate)
-  }
   inp$`Date End`<-v2
-  
   
   ##  self isolation
   f<-c()
@@ -702,6 +701,16 @@
 vectors<-inputs(inp,'Hypothetical Scenario')
 vectors0<-inputs(inp,'Baseline (Calibration)')
 
+f <- c(1,(1+parameters["give"])/2,(1-parameters["give"])/2,0)
+KH<-parameters["beds_available"]
+KICU<- parameters["icu_beds_available"]+parameters["ventilators_available"]
+Kvent<- parameters["ventilators_available"]
+x.H <- c(0,(1+parameters["give"])*KH/2,(3-parameters["give"])*KH/2,2*KH)
+x.ICU <- c(0,(1+parameters["give"])*KICU/2,(3-parameters["give"])*KICU/2,2*KICU)
+x.Vent <- c(0,(1+parameters["give"])*Kvent/2,(3-parameters["give"])*Kvent/2,2*Kvent)
+fH <- splinefun(x.H, f, method = "hyman")
+fICU <- splinefun(x.ICU, f, method = "hyman")
+fVent<- splinefun(x.Vent, f, method = "hyman")
 
 # set up a function to solve the equations
 covid<-function(t, Y, parameters,input) 
@@ -731,18 +740,10 @@
          VentC <- Y[VentCindex]
          CMC <- Y[CMCindex]
          P <- (S+E+I+R+X+V+H+HC+QS+QE+QI+QR+CL+QC+ICU+ICUC+ICUCV+Vent+VentC)
+         Q <- (sum(QS)+sum(QE)+sum(QI)+sum(QC)+sum(QR))/sum(P)
+         print(Q)
          
          # health system performance
-         f <- c(1,(1+give)/2,(1-give)/2,0)
-         KH<-beds_available
-         KICU<- icu_beds_available+ventilators_available
-         Kvent<- ventilators_available
-         x.H <- c(0,(1+give)*KH/2,(3-give)*KH/2,2*KH)
-         x.ICU <- c(0,(1+give)*KICU/2,(3-give)*KICU/2,2*KICU)
-         x.Vent <- c(0,(1+give)*Kvent/2,(3-give)*Kvent/2,2*Kvent)
-         fH <- splinefun(x.H, f, method = "hyman")
-         fICU <- splinefun(x.ICU, f, method = "hyman")
-         fVent<- splinefun(x.Vent, f, method = "hyman")
          critH<-min(1-fH(sum(H)+sum(ICUC)+sum(ICUCV)),1)
          crit<-min(1-fICU(sum(ICU)+sum(Vent)+sum(VentC)),1)
          critV<-min(1-fVent(sum(Vent)),1)
@@ -808,7 +809,11 @@
            trvban_eff<-travelban_eff
          }
          if(quarantine){
-           quarantine_rate<-min(sum((I+CL+H+ICU+Vent+HC+ICUC+ICUCV+VentC)*(household_size-1)/P),1)*quarantine_cov*quarantine_effort
+           rate_q<-min((min(sum((I+CL+H+ICU+Vent+HC+ICUC+ICUCV+VentC))*(household_size-1)/sum(P),1)*quarantine_effort),quarantine_cov/2)
+           quarantine_rate<-rate_q/(1+exp(-10*(quarantine_cov/2-Q)))
+           # print(paste('Q',Q))
+           # print(paste('rate',quarantine_rate))
+           # print(paste('rate_q',rate_q))
          }
          
          
@@ -847,7 +852,7 @@
          dSdt <- -S*lam-S*vaccinate+omega*R+ageing%*%S-mort*S+birth-quarantine_rate*S +(1/quarantine_days)*QS
          dEdt <- S*lam-gamma*E+ageing%*%E-mort*E + (1-vaccine_eff)*lam*V-quarantine_rate*E+(1/quarantine_days)*QE
          dIdt <- gamma*(1-pclin)*(1-screen_eff)*(1-ihr[,2])*E-nui*I+ageing%*%I-mort*I + (1/quarantine_days)*QI - quarantine_rate*I
-         dCLdt<- gamma*pclin*(1-selfis)*(1-ihr[,2])*E-nui*CL+ageing%*%CL-mort*CL + (1/quarantine_days)*QC
+         dCLdt<- gamma*pclin*(1-selfis)*(1-ihr[,2])*(1-quarantine_rate)*E-nui*CL+ageing%*%CL-mort*CL + (1/quarantine_days)*QC
          dRdt <- nui*I-omega*R+nui*X+nui*CL+ageing%*%R-mort*R + (1/quarantine_days)*QR + nus*(1-pdeath_h*ifr[,2])*H + (1-pdeath_icu*ifr[,2])*nu_icu*ICU + (1-pdeath_icuc*ifr[,2])*nu_icuc*ICUC + (1-pdeath_ventc*ifr[,2])*nu_ventc*ICUCV + (1-pdeath_hc*ifr[,2])*nusc*HC + (1-pdeath_vent*ifr[,2])*nu_vent*Vent+ (1-pdeath_ventc*ifr[,2])*nu_ventc*VentC
          dXdt <- gamma*selfis*pclin*(1-ihr[,2])*E+gamma*(1-pclin)*screen_eff*(1-ihr[,2])*E-nui*X+ageing%*%X-mort*X 
          dVdt <- vaccinate*S -(1-vaccine_eff)*lam*V +ageing%*%V - mort*V
@@ -855,7 +860,7 @@
          dQSdt <- quarantine_rate*S+ ageing%*%QS-mort*QS - (1/quarantine_days)*QS - lamq*QS
          dQEdt <- quarantine_rate*E - gamma*QE + ageing%*%QE-mort*QE - (1/quarantine_days)*QE + lamq*QS 
          dQIdt <- quarantine_rate*I + gamma*(1-ihr[,2])*(1-pclin)*QE-nui*QI+ageing%*%QI-mort*QI - (1/quarantine_days)*QI
-         dQCdt <- gamma*(1-ihr[,2])*pclin*QE-nui*QC+ageing%*%QC-mort*QC - (1/quarantine_days)*QC
+         dQCdt <- gamma*pclin*(1-selfis)*(1-ihr[,2])*quarantine_rate*E+gamma*(1-ihr[,2])*pclin*QE-nui*QC+ageing%*%QC-mort*QC - (1/quarantine_days)*QC
          dQRdt <- nui*QI+nui*QC+ageing%*%QR-mort*QR - (1/quarantine_days)*QR
          
          dHdt <- gamma*ihr[,2]*(1-prob_icu)*(1-critH)*reporth*E + gamma*ihr[,2]*(1-prob_icu)*(1-critH)*QE - nus*H + ageing%*%H-mort*H  
@@ -873,8 +878,8 @@
            gamma*ihr[,2]*prob_icu*(E+QE)
          dCMdt<- nus*pdeath_h*ifr[,2]*H + nusc*pdeath_hc*ifr[,2]*HC + nu_icu*pdeath_icu*ifr[,2]*ICU +nu_icuc*pdeath_icuc*ifr[,2]*ICUC +nu_vent*pdeath_vent*ifr[,2]*Vent +nu_ventc*pdeath_ventc*ifr[,2]*VentC +nu_ventc*pdeath_ventc*ifr[,2]*ICUCV+ 
            mort*H + mort*HC + mort*ICU + mort*ICUC + mort*ICUCV + mort*Vent + mort*VentC 
-         dCMCdt <- nusc*pdeath_hc*ifr[,2]*HC+nu_icuc*pdeath_icuc*ifr[,2]*ICUC + nu_ventc*pdeath_ventc*ifr[,2]*VentC + nu_ventc*pdeath_ventc*ifr[,2]*ICUCV
-         mort*HC + mort*ICUC + mort*VentC + mort*ICUCV 
+         dCMCdt <- nusc*pdeath_hc*ifr[,2]*HC+nu_icuc*pdeath_icuc*ifr[,2]*ICUC + nu_ventc*pdeath_ventc*ifr[,2]*VentC + nu_ventc*pdeath_ventc*ifr[,2]*ICUCV+
+           mort*HC + mort*ICUC + mort*VentC + mort*ICUCV 
          
          # return the rate of change
          list(c(dSdt,dEdt,dIdt,dRdt,dXdt,dHdt,dHCdt,dCdt,dCMdt,dVdt,dQSdt,dQEdt,dQIdt,dQRdt,dCLdt,dQCdt,dICUdt,dICUCdt,dICUCVdt,dVentdt,dVentCdt,dCMCdt))
@@ -892,16 +897,6 @@
   crit<-c()
   critV<-c()
 
-  f <- c(1,(1+parameters["give"])/2,(1-parameters["give"])/2,0)
-  KH<-parameters["beds_available"]
-  KICU<- parameters["icu_beds_available"]+parameters["ventilators_available"]
-  Kvent<- parameters["ventilators_available"]
-  x.H <- c(0,(1+parameters["give"])*KH/2,(3-parameters["give"])*KH/2,2*KH)
-  x.ICU <- c(0,(1+parameters["give"])*KICU/2,(3-parameters["give"])*KICU/2,2*KICU)
-  x.Vent <- c(0,(1+parameters["give"])*Kvent/2,(3-parameters["give"])*Kvent/2,2*Kvent)
-  fH <- splinefun(x.H, f, method = "hyman")
-  fICU <- splinefun(x.ICU, f, method = "hyman")
-  fVent<- splinefun(x.Vent, f, method = "hyman")
   for (i in 1:length(times)){
     critH[i]<-min(1-fH((sum(out[i,(Hindex+1)]))+sum(out[i,(ICUCindex+1)])+sum(out[i,(ICUCVindex+1)])),1)
     crit[i]<-min(1-fICU((sum(out[i,(ICUindex+1)]))+(sum(out[i,(Ventindex+1)]))+(sum(out[i,(VentCindex+1)]))))
@@ -1006,6 +1001,9 @@
   results$hospital_surge_beds <- round(previcureq1)
   results$icu_beds <- round(previcureq21)
   results$ventilators <- round(previcureq31)
+  results$normal_bed_requirement <- round(reqsurge1) #real required beds. previcureq1 above is the occupancy
+  results$icu_bed_requirement <- round(reqicu1)
+  results$icu_ventilator_requirement <- round(reqvent1)
   
   results$death_natural_non_exposed <- round(base_mort_S1)
   results$death_natural_exposed <- round(base_mort_E1 + base_mort_I1 + base_mort_CL1 + base_mort_X1 + base_mort_QS1 + 
@@ -1018,8 +1016,10 @@
   results$death_untreated_hospital <- round(cinc_mort_HC1)
   results$death_untreated_icu <- round(cinc_mort_ICUC1)
   results$death_untreated_ventilator <- round(cinc_mort_VentC1)+round(cinc_mort_ICUCV1)
-  results$total_deaths <- results$death_treated_hospital + results$death_treated_icu + results$death_treated_ventilator +
-    results$death_untreated_hospital + results$death_untreated_icu + results$death_untreated_ventilator+results$death_natural_non_exposed+results$death_natural_exposed
+  results$attributable_deaths <- results$death_treated_hospital + results$death_treated_icu + results$death_treated_ventilator +
+    results$death_untreated_hospital + results$death_untreated_icu + results$death_untreated_ventilator
+  results$attributable_deaths_end <- last(results$attributable_deaths)
+  results$total_deaths <- results$attributable_deaths + results$death_natural_non_exposed + results$death_natural_exposed
   results$total_deaths_end <- last(results$total_deaths)
   results$total_reported_deaths_end <- last(results$cum_mortality)
   results$base_mort_H <- base_mort_H1
@@ -1103,10 +1103,18 @@
   return(results)
 }
 
+# covidOdeCpp_reset()
+# out <- ode(y = Y, times = times, func = covidOdeCpp, parms = parameters2,
+#            input=vectors, A=A,
+#            contact_home=contact_home, contact_school=contact_school,
+#            contact_work=contact_work, contact_other=contact_other,
+#            popbirth_col2=popbirth[,2], popstruc_col2=popstruc[,2],
+#            ageing=ageing,
+#            ifr_col2=ifr[,2], ihr_col2=ihr[,2], mort_col=mort)
 
 out0 <- ode(y = Y, times = times, method = "euler", hini = 0.05, func = covid, parms = parameters, input=vectors0)
 simul_baseline <- process_ode_outcome(out0)
-# write.csv(simul_baseline, paste0(hilo,"_baseline_",gsub(":|-","",Sys.time()),".csv"))
+# # write.csv(simul_baseline, paste0(hilo,"_baseline_",gsub(":|-","",Sys.time()),".csv"))
 
 #future interventions
 #extend travel ban, quarantine, hand washing, cocooning the elderly until 1st July
@@ -1117,7 +1125,7 @@
 
 pop1<-out[,(Sindex+1)]+out[,(Eindex+1)]+out[,(Iindex+1)]+out[,(CLindex+1)]+out[,(Rindex+1)]+out[,(Xindex+1)]+out[,(Vindex+1)]+
   out[,(QSindex+1)]+out[,(QEindex+1)]+out[,(QIindex+1)]+out[,(QCindex+1)]+out[,(QRindex+1)]+
-  out[,(Hindex+1)]+out[,(HCindex+1)]+out[,(ICUindex+1)]+out[,(ICUCindex+1)]+out[,(ICUCVindex+1)]+out[,(Ventindex+1)]+out[,(VentCindex+1)] 
+  out[,(Hindex+1)]+out[,(HCindex+1)]+out[,(ICUindex+1)]+out[,(ICUCindex+1)]+out[,(ICUCVindex+1)]+out[,(Ventindex+1)]+out[,(VentCindex+1)]
 tpop1<-rowSums(pop1)
 
 #############    PLOTTING
@@ -1137,7 +1145,7 @@
 text(x=xtick,  y=-250, labels = format(xtick,"%b-%d"), srt = 0, xpd = TRUE)
 points(as.Date(cases_rv[,1]),cases_rv[,2],pch=19,col='red')
 
-# reset the maximum to the cumulative mortality 
+# reset the maximum to the cumulative mortality
 ymax<-max(cases_rv[,3],na.rm = T)
 plot(time,simul_interventions$cum_mortality,type='l',lwd=3,
      main="Cumulative Mortality", xlab="Date", ylab="Total deaths",
@@ -1201,7 +1209,7 @@
 time<-as.Date(out[,"time"]+startdate)
 coul=c("#047883", "#24A9E2","#051A46","#E68029", "#D63304","#D1D604")
 DM0<-as.data.frame(cbind(time,simul_baseline$base_mort_I+simul_baseline$base_mort_QI,
-                         simul_baseline$base_mort_CL+simul_baseline$base_mort_QC, 
+                         simul_baseline$base_mort_CL+simul_baseline$base_mort_QC,
                          simul_baseline$base_mort_X,
                          simul_baseline$base_mort_S+simul_baseline$base_mort_QS,
                          simul_baseline$base_mort_E+simul_baseline$base_mort_QE,
@@ -1249,7 +1257,7 @@
 # plot(time,simul_interventions$Rt,type='l',lwd=3,col='black',
 #      main="Intervention", xlab="Date", ylab="Reproduction number",ylim=c(0,ymax))
 # lines(time,simul_interventions$Rt/simul_interventions$Rt,lwd=2,col='grey')
-# 
+#
 
 ## Predicted ifr
 # ymax=max(c(simul_baseline$MORT1$value,simul_interventions$MORT1$value))
@@ -1267,9 +1275,9 @@
 # cinc_mort_H1 <- parameters["nus"]*parameters["pdeath_h"]*(out[,(Hindex+1)])
 # cinc_mort_HC1 <- parameters["nusc"]*parameters["pdeath_hc"]*(out[,(HCindex+1)])
 # cinc_mort_ICU1 <- parameters["nu_icu"]*parameters["pdeath_icu"]*out[,(ICUindex+1)]
-# cinc_mort_ICUC1 <- parameters["nu_icuc"]*parameters["pdeath_icuc"]*out[,(ICUCindex+1)] 
-# cinc_mort_Vent1 <- parameters["nu_vent"]*parameters["pdeath_vent"]*out[,(Ventindex+1)] 
-# cinc_mort_VentC1 <- parameters["nu_ventc"]*parameters["pdeath_ventc"]*out[,(VentCindex+1)] 
+# cinc_mort_ICUC1 <- parameters["nu_icuc"]*parameters["pdeath_icuc"]*out[,(ICUCindex+1)]
+# cinc_mort_Vent1 <- parameters["nu_vent"]*parameters["pdeath_vent"]*out[,(Ventindex+1)]
+# cinc_mort_VentC1 <- parameters["nu_ventc"]*parameters["pdeath_ventc"]*out[,(VentCindex+1)]
 # totage1<-as.data.frame(cinc_mort_H1+cinc_mort_HC1+cinc_mort_ICU1+cinc_mort_ICUC1+cinc_mort_Vent1+cinc_mort_VentC1)
 # basemort_H1<-(out[,(Hindex+1)])
 # basemort_HC1<-(out[,(HCindex+1)])
@@ -1282,16 +1290,16 @@
 # ages<-seq(0,100,by=5)
 # for (i in 1:dim(cinc_mort_H1)[1]) {
 #   for (j in 1:dim(cinc_mort_H1)[2]) {
-#     tc<-rbind(tc,c(i,ages[j],totage1[i,j]*ifr[j,2]+totbase1[i,j]*mort[j])) 
+#     tc<-rbind(tc,c(i,ages[j],totage1[i,j]*ifr[j,2]+totbase1[i,j]*mort[j]))
 #   }
 # }
 # tc<-as.data.frame(tc)
 # colnames(tc)<-c("Day","Age","value")
 # tc$Age<-as.factor(tc$Age)
-# p6<-ggplot(data=tc, aes(x=Day,y=value,fill=Age))+ 
+# p6<-ggplot(data=tc, aes(x=Day,y=value,fill=Age))+
 #   geom_bar(stat = "identity",position="fill", width=1)+
 #   ylab("Proportion of deaths")
-# 
+#
 # inc_mort_H0  <- parameters["nus"]*parameters["pdeath_h"]*(out0[,(Hindex+1)])
 # inc_mort_HC0 <- parameters["nusc"]*parameters["pdeath_hc"]*(out0[,(HCindex+1)])
 # inc_mort_ICU0 <- parameters["nu_icu"]*parameters["pdeath_icu"]*out0[,(ICUindex+1)]
@@ -1321,25 +1329,25 @@
 # grid.arrange(p16+theme_minimal(),
 #              p6+theme_minimal(),
 #              nrow=1)
-# 
-
-
-# 
-# 
-# 
+#
+
+
+#
+#
+#
 # #########################################################################################################################
 # #####   SUMMARY METRICS  ################################################################################################
 # #######################################################################################################################
-# 
+#
 # infected0<-tail((rowSums(out0[,(Rindex+1)])),1)/sum(popstruc[,2])
 # infected0
 # infected1<-tail((rowSums(out[,(Rindex+1)])),1)/sum(popstruc[,2])
 # infected1
-# 
+#
 # # #Population size checks
 # # tpop1
 # # tpop0
-# 
+#
 # # PCR
 # time_of_measurement<-40:49
 # # general population
@@ -1350,14 +1358,14 @@
 #     rowSums(out[time_of_measurement,ICUindex+1])+rowSums(out[time_of_measurement,Ventindex+1])+rowSums(out[time_of_measurement,HCindex+1])+
 #     rowSums(out[time_of_measurement,ICUCindex+1])+rowSums(out[time_of_measurement,VentCindex+1])+rowSums(out[time_of_measurement,QIindex+1])+
 #     rowSums(out[time_of_measurement,QCindex+1]))/sum(popstruc[,2])
-# 
+#
 # # SEROLOGY
 # tail((rowSums(out[,(Rindex+1)])),1)/sum(popstruc[,2])
-# 
+#
 # # IHR
 # sum(ihr$severe*popstruc[,2]/sum(popstruc[,2]))
-# 
-# 
+#
+#
 # # PORPORTIONAL MORTALITY IN THE ELDEST
 # m30<-out0[30,CMindex+1]/(out0[30,Cindex+1])
 # m30[is.infinite(m30)]<-0
@@ -1367,25 +1375,27 @@
 # m90[is.infinite(m90)]<-0
 # m120<-out0[120,CMindex+1]/out0[120,Cindex+1]
 # m120[is.infinite(m120)]<-0
-# 
+#
 # ifr30<-sum(m30*popstruc[,2]/sum(popstruc[,2]),na.rm = T)
 # ifr60<-sum(m60*popstruc[,2]/sum(popstruc[,2]),na.rm = T)
 # ifr90<-sum(m90*popstruc[,2]/sum(popstruc[,2]),na.rm = T)
 # ifr120<-sum(m120*popstruc[,2]/sum(popstruc[,2]),na.rm = T)
 # cbind(ifr30,ifr60,ifr90,ifr120)*100
-# 
+#
 # PMORTDF0<-as.data.frame(cbind(out0[30,CMindex+1]/sum(out0[30,CMindex+1]),out0[60,CMindex+1]/sum(out0[60,CMindex+1]),
 #                               out0[90,CMindex+1]/sum(out0[90,CMindex+1]),out0[120,CMindex+1]/sum(out0[120,CMindex+1])))
 # PMORTDF<-as.data.frame(cbind(out[30,CMindex+1]/sum(out[30,CMindex+1]),out[60,CMindex+1]/sum(out[60,CMindex+1]),
 #                              out[90,CMindex+1]/sum(out[90,CMindex+1]),out[120,CMindex+1]/sum(out[120,CMindex+1])))
 # sum(PMORTDF0$V2[15:21])
 # sum(PMORTDF$V2[15:21])
-# 
-# 
+#
+#
 # # output doubling time over time first 7 days
 # dd<-7
 # doub0<-log(2)*dd/(log(dailyinc0[2+dd]/dailyinc0[2]))
 # doub0
 
-# 
-# 
+#
+#
+
+
